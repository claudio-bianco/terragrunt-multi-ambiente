name: Terragrunt (dev/prod)

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'live/**'
      - 'modules/**'
      - 'terragrunt.hcl'
  push:
    branches: [ main ]
    paths:
      - 'live/**'
      - 'modules/**'
      - 'terragrunt.hcl'
  workflow_dispatch:
    inputs:
      run_dev:
        description: "Rodar dev?"
        required: true
        default: "true"
        type: choice
        options: [ "true", "false" ]
      run_prod:
        description: "Rodar prod?"
        required: true
        default: "false"
        type: choice
        options: [ "true", "false" ]

env:
  TERRAFORM_VERSION: "1.9.5"
  TERRAGRUNT_VERSION: "0.90.0"
  AWS_REGION: "us-east-1"

jobs:
  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [ dev, prod ]
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    environment: ${{ matrix.env }}   # carrega secrets do Environment correspondente
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Install Terragrunt
        run: |
          curl -sSL "https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64" -o terragrunt
          install -m 0755 terragrunt /usr/local/bin/terragrunt
          terragrunt --version

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}   # secret do Environment (dev/prod)
          role-session-name: tg-plan-${{ matrix.env }}

      - name: Provider cache
        run: |
          echo "TF_PLUGIN_CACHE_DIR=${{ runner.tool_cache }}/terraform-plugins" >> $GITHUB_ENV
          mkdir -p "${{ runner.tool_cache }}/terraform-plugins"

      - name: Terragrunt init (run-all)
        working-directory: live/${{ matrix.env }}
        run: terragrunt run-all init --terragrunt-non-interactive -- -input=false -no-color

      - name: Terragrunt plan (run-all)
        working-directory: live/${{ matrix.env }}
        run: |
          terragrunt run-all plan --terragrunt-non-interactive -- -input=false -no-color | tee plan-${{ matrix.env }}.log

      - name: Artefatos do plan
        uses: actions/upload-artifact@v4
        with:
          name: plan-${{ matrix.env }}
          path: live/${{ matrix.env }}/plan-${{ matrix.env }}.log

  apply_dev:
    # push sempre roda; no dispatch só roda se run_dev == "true"
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.run_dev == 'true')
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Install Terragrunt
        run: |
          curl -sSL "https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64" -o terragrunt
          install -m 0755 terragrunt /usr/local/bin/terragrunt

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  # do Environment dev
          role-session-name: tg-apply-dev

      - name: Provider cache
        run: |
          echo "TF_PLUGIN_CACHE_DIR=${{ runner.tool_cache }}/terraform-plugins" >> $GITHUB_ENV
          mkdir -p "${{ runner.tool_cache }}/terraform-plugins"

      - name: Terragrunt init (run-all)
        working-directory: live/dev
        run: terragrunt run-all init --terragrunt-non-interactive -- -input=false -no-color

      - name: Terragrunt apply (run-all)
        working-directory: live/dev
        run: terragrunt run-all apply --terragrunt-non-interactive -- -input=false -auto-approve -no-color

  apply_prod:
    # push sempre roda; no dispatch só roda se run_prod == "true"
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.run_prod == 'true')
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Install Terragrunt
        run: |
          curl -sSL "https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64" -o terragrunt
          install -m 0755 terragrunt /usr/local/bin/terragrunt

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  # do Environment prod
          role-session-name: tg-apply-prod

      - name: Provider cache
        run: |
          echo "TF_PLUGIN_CACHE_DIR=${{ runner.tool_cache }}/terraform-plugins" >> $GITHUB_ENV
          mkdir -p "${{ runner.tool_cache }}/terraform-plugins"

      - name: Terragrunt init (run-all)
        working-directory: live/prod
        run: terragrunt run-all init --terragrunt-non-interactive -- -input=false -no-color

      - name: Terragrunt apply (run-all)
        working-directory: live/prod
        run: terragrunt run-all apply --terragrunt-non-interactive -- -input=false -auto-approve -no-color
